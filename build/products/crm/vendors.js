// Generated by CoffeeScript 1.7.1
var CrmModule, Request, Vendors, xml2js, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

_ = require('underscore');

xml2js = require("xml2js");

CrmModule = require('./crm-module');

Request = require('../../request');

Vendors = (function(_super) {
  __extends(Vendors, _super);

  function Vendors() {
    return Vendors.__super__.constructor.apply(this, arguments);
  }

  Vendors.prototype.name = 'Vendors';

  Vendors.prototype.getMyRecords = function() {
    throw new Error('Not Implemented');
  };

  Vendors.prototype.getRecords = function(_query, cb) {
    throw new Error('Not Implemented');
  };

  Vendors.prototype.updateRecords = function() {
    throw new Error('Not Implemented');
  };

  Vendors.prototype.getSearchRecords = function() {
    throw new Error('Not Implemented');
  };

  Vendors.prototype.getRelatedRecords = function() {
    throw new Error('Not Implemented');
  };

  Vendors.prototype.getFields = function() {
    throw new Error('Not Implemented');
  };

  Vendors.prototype.updateRelatedRecords = function() {
    throw new Error('Not Implemented');
  };

  Vendors.prototype.getUsers = function() {
    throw new Error('Not Implemented');
  };

  Vendors.prototype.uploadFile = function() {
    throw new Error('Not Implemented');
  };

  Vendors.prototype.downloadFile = function() {
    throw new Error('Not Implemented');
  };

  Vendors.prototype.deleteFile = function() {
    throw new Error('Not Implemented');
  };

  Vendors.prototype.uploadPhoto = function() {
    throw new Error('Not Implemented');
  };

  Vendors.prototype.downloadPhoto = function() {
    throw new Error('Not Implemented');
  };

  Vendors.prototype.deletePhoto = function() {
    throw new Error('Not Implemented');
  };

  return Vendors;

})(CrmModule);

module.exports = Vendors;
